<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="chartTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>